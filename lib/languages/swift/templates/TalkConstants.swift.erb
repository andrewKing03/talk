<%= autogenerated_warning %>
//MARK: Glossaries
<% @base[:glossary].each do |glossary| %>

// @glossary <%= glossary[:name] %>
<%= glossary_docuementation_block(glossary) %>

struct <%= glossary[:name].split(".").last %> : Int {
<% glossary[:term].each do |term| %>
<%= comment_block(term) %>
    static let <%= glossary_term_name(term[:name]) %> = "<%= term[:value] %>"
<% end # term %>
}

<% end # glossary %>


//MARK: Enumerations
<% @base[:enumeration].each do |enumeration| %>

<%= enumeration_docuementation_block(enumeration) %>
enum <%= truncated_name(enumeration[:name]) %> {
  <%= (enumeration[:constant].map { |constant| "\t"+constant_definition(constant) }).join("\n") %>
}

<% end # enumeration %>

struct Protocol {
<% @base[:protocol].each do |protocol| %>

// @protocol <%= protocol[:name] %>
<%= protocol_documentation_block(protocol) %>
    struct <%= protocol_constant_name(protocol[:name]) %> {

    <% protocol[:method].each do |method| %>
    #define <%= protocol_method_name(protocol[:name], method[:name]) %> @"<%= method[:name] %>"
        static let <%= method[:name] %> = "<%= method[:name] %>"
    <% end %>
    }

<% end # protocol %>
}

